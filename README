Licence
=======

windows-privesc-check - Security Auditing Tool For Windows
Copyright (C) 2010  pentestmonkey@pentestmonkey.net
                    http://pentestmonkey.net/windows-privesc-check

This tool may be used for legal purposes only.  Users take full responsibility
for any actions performed using this tool.  The author accepts no liability for
damage caused by this tool.  If these terms are not acceptable to you, then you  
may not use this tool.

In all other respects the GPL version 2 applies.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

TODO List
=========

* TODO review "read" perms.  should probably ignore these.
* TODO explaination of what various permissions mean
* TODO Audit: Process listing, full paths and perms of all processes
* TODO dlls used by programs (for all checks)
* TODO find web roots and check for write access
* TODO support remote server (remote file, reg keys, unc paths for file, remote resolving of sids)
* TODO task scheduler
* TODO alert if lanman hashes are being stored (for post-exploitation)
* TODO alert if named local/domain service accounts are being used (for post-exploitation)
* TODO Alert if really important patches are missing.  These are metasploitable:
  * MS10_015 977165 Vulnerabilities in Windows Kernel Could Allow Elevation of Privilege (kitrap0d - meterpreter "getsystem")
  * MS03_049 828749 Microsoft Workstation Service NetAddAlternateComputerName Overflow (netapi)     
  * MS04_007 828028 Microsoft ASN.1 Library Bitstring Heap Overflow (killbill)      
  * MS04_011 835732 Microsoft LSASS Service DsRolerUpgradeDownlevelServer Overflow (lsass)    
  * MS04_031 841533 Microsoft NetDDE Service Overflow (netdde)
  * MS05_039 899588 Microsoft Plug and Play Service Overflow (pnp)
  * MS06_025 911280 Microsoft RRAS Service RASMAN Registry Overflow (rasmans_reg)
  * MS06_025 911280 Microsoft RRAS Service Overflow (rras)
  * MS06_040 921883 Microsoft Server Service NetpwPathCanonicalize Overflow (netapi)
  * MS06_066 923980 Microsoft Services MS06-066 nwapi32.dll (nwapi)
  * MS06_066 923980 Microsoft Services MS06-066 nwwks.dll (nwwks)
  * MS06_070 924270 Microsoft Workstation Service NetpManageIPCConnect Overflow (wkssvc)
  * MS07_029 935966 Microsoft DNS RPC Service extractQuotedChar() Overflow (SMB) (msdns_zonename)
  * MS08_067 958644 Microsoft Server Service Relative Path Stack Corruption (netapi)
  * MS09_050 975517 Microsoft SRV2.SYS SMB Negotiate ProcessID Function Table Dereference (smb2_negotiate_func_index)
  * MS03_026 823980 Microsoft RPC DCOM Interface Overflow
  * MS05_017 892944 Microsoft Message Queueing Service Path Overflow
  * MS07_065 937894 Microsoft Message Queueing Service DNS Name Path Overflow
* TODO registry key checks for windows services
* TODO per-user checks including perms on home dirs and startup folders + default user and all users
* TODO need to be able to order issues more logically.  Maybe group by section?

Building an Executable
======================

This script should be converted to an exe before it is used for
auditing - otherwise you'd have to install loads of dependencies
on the target system.

Download pyinstaller: http://www.pyinstaller.org/

Install the pywin32 dependency: http://pywin32.sourceforge.net/

Read the docs: http://www.pyinstaller.org/export/latest/tags/1.4/doc/Manual.html?format=raw

Unzip to c:\pyinstaller (say)

```
cd c:\pyinstaller
python Configure.py
python Makespec.py --onefile c:\somepath\wpc.py
python Build.py wpc\wpc.spec
wpc\dist\wpc.exe
```

Alternative to pyinstaller is cxfreeze.  This doesn't always work, though:
\Python26\Scripts\cxfreeze wpc.py --target-dir dist
zip -r wpc.zip dist

You then need to copy wpc.zip to the target and unzip it.  The exe therein
should then run because all the dependencies are in the current (dist) directory.

64-bit vs 32-bit
================

If we run a 32-bit version of this script on a 64-bit box we have (at least) the 
following problems:
* Registry:  We CAN'T see the whole 64-bit registry.  This seems insurmountable.
* Files:     It's harder to see in system32.  This can be worked round.

What types of object have permissions?
======================================

Files, directories and registry keys are the obvious candidates.  There are several others too...

This provides a good summary: http://msdn.microsoft.com/en-us/library/aa379557%28v=VS.85%29.aspx

Files or directories on an NTFS file system	GetNamedSecurityInfo, SetNamedSecurityInfo, GetSecurityInfo, SetSecurityInfo
Named pipes
Anonymous pipes
Processes
Threads
File-mapping objects	
Access tokens	
Window-management objects (window stations and desktops)
Registry keys	
Windows services
Local or remote printers	
Network shares	
Interprocess synchronization objects 
Directory service objects	

This provides a good description of how Access Tokens interact with the Security Descriptors on Securable Objects: http://msdn.microsoft.com/en-us/library/aa374876%28v=VS.85%29.aspx

http://msdn.microsoft.com/en-us/library/aa379593(VS.85).aspx
 win32security.SE_UNKNOWN_OBJECT_TYPE - n/a
 win32security.SE_FILE_OBJECT - poc working
 win32security.SE_SERVICE - poc working
 win32security.SE_PRINTER - TODO Indicates a printer. A printer object can be a local printer, such as PrinterName, or a remote printer, such as 
                     \\ComputerName\PrinterName.
 win32security.SE_REGISTRY_KEY - TODO
    Indicates a registry key. A registry key object can be in the local registry, such as CLASSES_ROOT\SomePath or in a remote registry, 
    such as \\ComputerName\CLASSES_ROOT\SomePath.
    The names of registry keys must use the following literal strings to identify the predefined registry keys: 
    "CLASSES_ROOT", "CURRENT_USER", "MACHINE", and "USERS".
    perms: http://msdn.microsoft.com/en-us/library/ms724878(VS.85).aspx
 win32security.SE_LMSHARE - TODO Indicates a network share. A share object can be local, such as ShareName, or remote, such as \\ComputerName\ShareName.
 win32security.SE_KERNEL_OBJECT - TODO
       Indicates a local  kernel object.
       The GetSecurityInfo and SetSecurityInfo functions support all types of kernel objects. 
       The GetNamedSecurityInfo and SetNamedSecurityInfo functions work only with the following kernel objects: 
       semaphore, event, mutex, waitable timer, and file mapping.
 win32security.SE_WINDOW_OBJECT - TODO Indicates a window station or desktop object on the local computer. 
                   You cannot use GetNamedSecurityInfo and SetNamedSecurityInfo with these objects because the names of window stations or desktops are not unique.
 win32security.SE_DS_OBJECT - TODO - Active Directory object
                Indicates a directory service object or a property set or property of a directory service object. 
                The name string for a directory service object must be in  X.500 form, for example:
                CN=SomeObject,OU=ou2,OU=ou1,DC=DomainName,DC=CompanyName,DC=com,O=internet
					perm list: http://msdn.microsoft.com/en-us/library/aa772285(VS.85).aspx
 win32security.SE_DS_OBJECT_ALL - TODO 
            Indicates a directory service object and all of its property sets and properties. 
 win32security.SE_PROVIDER_DEFINED_OBJECT - TODO Indicates a provider-defined object. 
 win32security.SE_WMIGUID_OBJECT - TODO Indicates a WMI object.
 win32security.SE_REGISTRY_WOW64_32KEY - TODO Indicates an object for a registry entry under WOW64. 

What sort of privileges can be granted on Windows?
==================================================

These are bit like Capabilities on Linux.
http://msdn.microsoft.com/en-us/library/bb530716(VS.85).aspx
http://msdn.microsoft.com/en-us/library/bb545671(VS.85).aspx

These privs sound like they might allow the holder to gain admin rights:

SE_ASSIGNPRIMARYTOKEN_NAME TEXT("SeAssignPrimaryTokenPrivilege") Required to assign the primary token of a process. User Right: Replace a process-level token.
SE_BACKUP_NAME TEXT("SeBackupPrivilege") Required to perform backup operations. This privilege causes the system to grant all read access control to any file, regardless of the access control list (ACL) specified for the file. Any access request other than read is still evaluated with the ACL. This privilege is required by the RegSaveKey and RegSaveKeyExfunctions. The following access rights are granted if this privilege is held: READ_CONTROL ACCESS_SYSTEM_SECURITY FILE_GENERIC_READ FILE_TRAVERSE User Right: Back up files and directories.
SE_CREATE_PAGEFILE_NAME TEXT("SeCreatePagefilePrivilege") Required to create a paging file. User Right: Create a pagefile.
SE_CREATE_TOKEN_NAME TEXT("SeCreateTokenPrivilege") Required to create a primary token. User Right: Create a token object.
SE_DEBUG_NAME TEXT("SeDebugPrivilege") Required to debug and adjust the memory of a process owned by another account. User Right: Debug programs.
SE_ENABLE_DELEGATION_NAME TEXT("SeEnableDelegationPrivilege") Required to mark user and computer accounts as trusted for delegation. User Right: Enable computer and user accounts to be trusted for delegation.
SE_LOAD_DRIVER_NAME TEXT("SeLoadDriverPrivilege") Required to load or unload a device driver. User Right: Load and unload device drivers.
SE_MACHINE_ACCOUNT_NAME TEXT("SeMachineAccountPrivilege") Required to create a computer account. User Right: Add workstations to domain.
SE_MANAGE_VOLUME_NAME TEXT("SeManageVolumePrivilege") Required to enable volume management privileges. User Right: Manage the files on a volume.
SE_RELABEL_NAME TEXT("SeRelabelPrivilege") Required to modify the mandatory integrity level of an object. User Right: Modify an object label.
SE_RESTORE_NAME TEXT("SeRestorePrivilege") Required to perform restore operations. This privilege causes the system to grant all write access control to any file, regardless of the ACL specified for the file. Any access request other than write is still evaluated with the ACL. Additionally, this privilege enables you to set any valid user or group SID as the owner of a file. This privilege is required by the RegLoadKey function. The following access rights are granted if this privilege is held: WRITE_DAC WRITE_OWNER ACCESS_SYSTEM_SECURITY FILE_GENERIC_WRITE FILE_ADD_FILE FILE_ADD_SUBDIRECTORY DELETE User Right: Restore files and directories.
SE_SHUTDOWN_NAME TEXT("SeShutdownPrivilege") Required to shut down a local system. User Right: Shut down the system.
SE_SYNC_AGENT_NAME TEXT("SeSyncAgentPrivilege") Required for a domain controller to use the LDAP directory synchronization services. This privilege enables the holder to read all objects and properties in the directory, regardless of the protection on the objects and properties. By default, it is assigned to the Administrator and LocalSystem accounts on domain controllers. User Right: Synchronize directory service data.
SE_TAKE_OWNERSHIP_NAME TEXT("SeTakeOwnershipPrivilege") Required to take ownership of an object without being granted discretionary access. This privilege allows the owner value to be set only to those values that the holder may legitimately assign as the owner of an object. User Right: Take ownership of files or other objects.
SE_TCB_NAME TEXT("SeTcbPrivilege") This privilege identifies its holder as part of the trusted computer base. Some trusted protected subsystems are granted this privilege. User Right: Act as part of the operating system.
SE_TRUSTED_CREDMAN_ACCESS_NAME TEXT("SeTrustedCredManAccessPrivilege") Required to access Credential Manager as a trusted caller. User Right: Access Credential Manager as a trusted caller.

These sound like they could be troublesome in the wrong hands:

SE_SECURITY_NAME TEXT("SeSecurityPrivilege") Required to perform a number of security-related functions, such as controlling and viewing audit messages. This privilege identifies its holder as a security operator. User Right: Manage auditing and security log.
SE_REMOTE_SHUTDOWN_NAME TEXT("SeRemoteShutdownPrivilege") Required to shut down a system using a network request. User Right: Force shutdown from a remote system.
SE_PROF_SINGLE_PROCESS_NAME TEXT("SeProfileSingleProcessPrivilege") Required to gather profiling information for a single process. User Right: Profile single process.
SE_AUDIT_NAME TEXT("SeAuditPrivilege") Required to generate audit-log entries. Give this privilege to secure servers.User Right: Generate security audits.
SE_INC_BASE_PRIORITY_NAME TEXT("SeIncreaseBasePriorityPrivilege") Required to increase the base priority of a process. User Right: Increase scheduling priority.
SE_INC_WORKING_SET_NAME TEXT("SeIncreaseWorkingSetPrivilege") Required to allocate more memory for applications that run in the context of users. User Right: Increase a process working set.
SE_INCREASE_QUOTA_NAME TEXT("SeIncreaseQuotaPrivilege") Required to increase the quota assigned to a process. User Right: Adjust memory quotas for a process.
SE_LOCK_MEMORY_NAME TEXT("SeLockMemoryPrivilege") Required to lock physical pages in memory. User Right: Lock pages in memory.
SE_SYSTEM_ENVIRONMENT_NAME TEXT("SeSystemEnvironmentPrivilege") Required to modify the nonvolatile RAM of systems that use this type of memory to store configuration information. User Right: Modify firmware environment values.

These sound less interesting:

SE_CHANGE_NOTIFY_NAME TEXT("SeChangeNotifyPrivilege") Required to receive notifications of changes to files or directories. This privilege also causes the system to skip all traversal access checks. It is enabled by default for all users. User Right: Bypass traverse checking.
SE_CREATE_GLOBAL_NAME TEXT("SeCreateGlobalPrivilege") Required to create named file mapping objects in the global namespace during Terminal Services sessions. This privilege is enabled by default for administrators, services, and the local system account.User Right: Create global objects. Windows XP/2000:  This privilege is not supported. Note that this value is supported starting with Windows Server 2003, Windows XP with SP2, and Windows 2000 with SP4.
SE_CREATE_PERMANENT_NAME TEXT("SeCreatePermanentPrivilege") Required to create a permanent object. User Right: Create permanent shared objects.
SE_CREATE_SYMBOLIC_LINK_NAME TEXT("SeCreateSymbolicLinkPrivilege") Required to create a symbolic link. User Right: Create symbolic links.
SE_IMPERSONATE_NAME TEXT("SeImpersonatePrivilege") Required to impersonate. User Right: Impersonate a client after authentication.    Windows XP/2000:  This privilege is not supported. Note that this value is supported starting with Windows Server 2003, Windows XP with SP2, and Windows 2000 with SP4.
SE_SYSTEM_PROFILE_NAME TEXT("SeSystemProfilePrivilege") Required to gather profiling information for the entire system. User Right: Profile system performance.
SE_SYSTEMTIME_NAME TEXT("SeSystemtimePrivilege") Required to modify the system time. User Right: Change the system time.
SE_TIME_ZONE_NAME TEXT("SeTimeZonePrivilege") Required to adjust the time zone associated with the computer's internal clock. User Right: Change the time zone.
SE_UNDOCK_NAME TEXT("SeUndockPrivilege") Required to undock a laptop. User Right: Remove computer from docking station.
SE_UNSOLICITED_INPUT_NAME TEXT("SeUnsolicitedInputPrivilege") Required to read unsolicited input from a terminal device. User Right: Not applicable.

These are from ntsecapi.h:

SE_BATCH_LOGON_NAME TEXT("SeBatchLogonRight") Required for an account to log on using the batch logon type.
SE_DENY_BATCH_LOGON_NAME TEXT("SeDenyBatchLogonRight") Explicitly denies an account the right to log on using the batch logon type.
SE_DENY_INTERACTIVE_LOGON_NAME TEXT("SeDenyInteractiveLogonRight") Explicitly denies an account the right to log on using the interactive logon type.
SE_DENY_NETWORK_LOGON_NAME TEXT("SeDenyNetworkLogonRight") Explicitly denies an account the right to log on using the network logon type.
SE_DENY_REMOTE_INTERACTIVE_LOGON_NAME TEXT("SeDenyRemoteInteractiveLogonRight") Explicitly denies an account the right to log on remotely using the interactive logon type.
SE_DENY_SERVICE_LOGON_NAME TEXT("SeDenyServiceLogonRight") Explicitly denies an account the right to log on using the service logon type.
SE_INTERACTIVE_LOGON_NAME TEXT("SeInteractiveLogonRight") Required for an account to log on using the interactive logon type.
SE_NETWORK_LOGON_NAME TEXT("SeNetworkLogonRight") Required for an account to log on using the network logon type.
SE_REMOTE_INTERACTIVE_LOGON_NAME TEXT("SeRemoteInteractiveLogonRight") Required for an account to log on remotely using the interactive logon type.
SE_SERVICE_LOGON_NAME TEXT("SeServiceLogonRight") Required for an account to log on using the service logon type.
